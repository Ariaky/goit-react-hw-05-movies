{"version":3,"file":"static/js/649.acc89c01.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/SearchBar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-radius: 10px;\n    border: 1px solid rgba(190, 190, 190);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    transition: 0.3s ease-in-out;\n\n    &:hover {\n        transform: scale(1.03);\n        transition: 0.3s ease-in-out;\n    }\n\n    @media only screen and (min-width: 768px) {\n        max-width: 184px;\n    }\n`;\n\nexport const Img = styled.img`\n    height: auto;\n    object-fit: cover;\n    margin-bottom: 10px;\n    border-radius: 10px 10px 0 0;\n`;\n\nexport const Title = styled.h3`\n  margin: 0 10px 10px 10px;\n  font-size: 18px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-weight: 500;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 14px;\n}\n`;\n\nexport const Rating = styled.div`\n  display: flex;\n  flex-wrap: no-wrap;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 10px 10px 10px;\n`;\n\nexport const RatingValue = styled.span`\n  display: block;\n  line-height: 2px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-weight: 500;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 14px;\n`;\n","import { useLocation } from \"react-router-dom\";\nimport StarRatings from \"react-star-ratings\";\nimport { Img, Rating, RatingValue, StyledLink, Title } from \"./MovieCard.styled\";\n\nconst BASIC_IMG_URL = 'https://image.tmdb.org/t/p/original';\nconst defaultImg = `https://via.placeholder.com/200x300?text=No+Image`;\n\nexport const MovieCard = ({\n  info: { id, title, poster_path, release_date, vote_average },\n}) => {\n  const location = useLocation();\n  const releaseDate = new Date(release_date);\n\n  return (\n    <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n      {poster_path ? (\n        <Img src={`${BASIC_IMG_URL}${poster_path}`} alt={title} loading=\"lazy\" />\n      ) : (\n        <Img src={defaultImg} alt=\"placeholder\" loading=\"lazy\" />\n      )}\n      <Title>\n        {title} ({releaseDate.getFullYear()})\n      </Title>\n      <Rating>\n        <StarRatings\n          rating={vote_average}\n          numberOfStars={10}\n          starRatedColor=\"#ffc414\"\n          starDimension=\"19px\"\n          starSpacing=\"1px\"\n        />\n        <RatingValue>{vote_average.toFixed(1)}</RatingValue>\n      </Rating>\n    </StyledLink>\n  );\n};","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    margin-top: 15px;\n\n`\n\nexport const StyledMovieList = styled.ul`\n    margin-bottom: 15px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    justify-content: space-around;\n`\nexport const MovieItem = styled.li`\n    margin-bottom: 15px;\n`","import { MovieCard } from 'components/MovieCard/MovieCard'; \nimport { Wrapper, StyledMovieList, MovieItem } from './MoviesList.styled'\n\nconst MovieList = ({ list, state }) => {\n    return (\n        <>\n            <Wrapper>\n                <StyledMovieList>\n                    {list.map(movie => (\n                    <MovieItem key={movie.id}>\n                        <MovieCard info={movie} />\n                    </MovieItem>\n                    ))}\n                </StyledMovieList>\n            </Wrapper>\n        </>\n    );\n  };\n\n  export default MovieList;\n\n           ","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 15px;\n\n`;\n\nexport const Input = styled.input`\n    border-radius: 10px;\n    border: 1px solid gray;\n    box-shadow: 0px 5px 5px #949484;\n    padding: 5px 10px;\n    font-size: 20px;\n    font-weight: 500;\n    outline: 0;  \n    min-width: 240px;\n`;\n\nexport const Button = styled.button`\n    color: black;\n    background-color: rgb(240, 240, 240);\n    border-radius: 10px;\n    border: 1px solid gray;\n    box-shadow: 0px 5px 5px #949484;\n    padding: 5px 10px;\n    font-size: 20px;\n    font-weight: 500;\n    width: 100px;\n    text-align: center;\n    transition: 0.3s ease-in-out;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.1);\n        transition: 0.3s ease-in-out;\n        border: 1px solid gray;\n    }\n`;","import { Form, Input, Button } from './SearchBar.styled';\n\nconst Searchbar = ({ setSearchParams, fetchMoviesFromApi }) => {\n    const handleSubmit = async e => {\n      e.preventDefault();\n      const searchForm = e.currentTarget;\n      const searchQuery = searchForm.elements.query.value;\n      setSearchParams({ query: searchQuery });\n      searchForm.reset();\n      fetchMoviesFromApi(searchQuery);\n    };\n  \n    return (\n      <Form onSubmit={handleSubmit}>\n        <Input \n          type=\"text\" \n          name=\"query\" \n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie name...\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    );\n  };\n  \n  export default Searchbar;","import Searchbar from '../components/Searchbar/Searchbar';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchMoviesByQuery } from '../services/api';\nimport { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom'; // component for rendering child components\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  \n\n  async function fetchMoviesFromApi(searchQuery) {\n    try {\n      const moviesFounded = await fetchMoviesByQuery(searchQuery);\n      setMovies(moviesFounded);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    if (query) fetchMoviesFromApi(query);\n  }, [query]);\n\n  return (\n    <>\n      <Searchbar\n        setSearchParams={setSearchParams}\n        fetchMoviesFromApi={fetchMoviesFromApi}\n      />\n      <MovieList list={movies} />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Movies;\n\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","Title","_templateObject3","Rating","_templateObject4","RatingValue","_templateObject5","MovieCard","_ref","_ref$info","info","id","title","poster_path","release_date","vote_average","location","useLocation","releaseDate","Date","_jsxs","to","concat","state","from","children","_jsx","src","alt","loading","getFullYear","StarRatings","rating","numberOfStars","starRatedColor","starDimension","starSpacing","toFixed","Wrapper","StyledMovieList","MovieItem","list","_Fragment","map","movie","Form","Input","Button","setSearchParams","fetchMoviesFromApi","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","e","searchForm","searchQuery","_context","prev","next","preventDefault","currentTarget","elements","query","value","reset","stop","_x","apply","arguments","onSubmit","type","name","autoComplete","autoFocus","placeholder","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","get","_fetchMoviesFromApi","moviesFounded","fetchMoviesByQuery","sent","t0","console","error","useEffect","Searchbar","MovieList","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}